var jinqJs = function (n) { "use strict"; var t = [], r = [], e = [], u = !1, l = !1; jinqJs.settings = jinqJs.settings || {}, jinqJs.settings = "undefined" != typeof n ? n : { includeIdentity: jinqJs.settings.includeIdentity || !1 }; var s = function (n) { return "undefined" == typeof n || 0 === n.length }, i = function (n) { return g(n, "length") && !f(n) && !o(n) }, a = function (n) { return null !== n && n.constructor === Object }, f = function (n) { return null !== n && n.constructor === String }, g = function (n, t) { return "undefined" != typeof n[t] }, o = function (n) { return "function" == typeof n }, h = function (n, t, r) { for (var e = 0; e < n.length; e++) if (n[e][t] == r) return !0; return !1 }, c = function (n, t) { return m(n, t, !0) }, m = function (n, t, r) { var e = null, u = !1, l = [], s = !1; r = r || !1; for (var i = 0; i < n.length; i++) { u = !1; for (var f in t) { if (e = n[i], s = a(e), !s && e != t[f] || s && e[f] != t[f]) { u = !1; break } u = !0 } if (u) { if (r) return e; l.push(e) } } return 0 === l.length ? null : l }, v = function (n, t) { for (var r = {}, e = null, u = 0; u < t.length; u++) e = t[u], r[e] = g(n, e) ? n[e] : 0; return r }, d = function (n, t) { for (var u = [], l = null, s = null, i = null, a = 0; a < r.length; a++) if (l = v(r[a], e), s = v(r[a], n), i = c(u, l), null === i) { i = {}; for (var f in l) i[f] = l[f]; for (var g in s) i[g] = t(i[g], s[g], JSON.stringify(l) + g); u.push(i) } else for (var o in s) i[o] = t(i[o], r[a][o], JSON.stringify(l) + o); return e = [], u }, p = function (n) { for (var t = null, e = null, u = null, l = null, s = null, i = null, a = null, f = 1, o = null, h = null, c = !1, m = 0; m < n.length; m++) e = m > 0 ? n[m - 1] : null, t = n[m], u = g(t, "field") ? t.field : null, f = g(t, "sort") && "desc" === t.sort ? -1 : 1, c = null === u || isNaN(u) ? !1 : !0, r.sort(function (n, t) { return c ? (l = Object.keys(n)[u], s = Object.keys(t)[u], null !== e && (i = Object.keys(n)[e.field], a = Object.keys(t)[e.field])) : (l = s = u, null !== e && (i = a = e.field)), o = null === u ? n : isNaN(n[l]) ? n[l] : Number(n[l]), h = null === u ? t : isNaN(t[s]) ? t[s] : Number(t[s]), h > o && (null === e || null === u || n[i] == t[a]) ? -1 * f : o > h && (null === e || null === u || n[i] == t[a]) ? 1 * f : 0 }) }, y = function (n) { for (var t = [], r = 0; r < n.length; r++) t = t.concat(n[r]); return t }, b = function (n) { for (var t = {}, r = 0; r < n.length; r++) for (var e in n[r]) t[e] = n[r][e]; return t }, N = function (n) { var t = {}; for (var r in n) t[r] = ""; return t }, O = function (n, e) { var u = null, l = [], s = null, a = [], g = 1; if (i(e) && 0 !== e.length && 0 !== t.length) { switch (n) { case "from": if (1 === t.length) return void (r = t[0]); a = t[0]; break; case "inner": case "left": a = r, g = 0; break; default: return } for (var h = g; h < t.length; h++) l = [], a.forEach(function (r) { o(e[0]) ? (s = [], t[h].forEach(function (n) { e[0](r, n) && s.push(n) }), 0 === s.length && (s = null)) : (u = v(r, e), s = m(t[h], u)), null !== s ? f(s[0]) ? l.push(r) : s.forEach(function (n) { l.push(b([n, r])) }) : "left" === n && (t[h].length > 0 && (u = N(t[h][0]), u = b([u, r])), l.push(b([r, u]))) }), a = l; t = [], r = l } }, k = function (n, r) { if (0 === r.length) return this; t = [], t.func = n; for (var e = 0; e < r.length; e++) r[e].length > 0 && t.push(r[e]) }, J = function () { var n = null, e = null; if (0 === arguments.length) return this; for (var u = 0; u < arguments.length; u++) if (null !== arguments[u] && 0 !== arguments[u].length) { if (2 == arguments.length && o(arguments[1])) n = arguments[0], e = arguments[1], u = arguments.length; else if (n = arguments[u], o(n)) continue; if (f(n)) { var l = new XMLHttpRequest; if (o(e) && (l.self = this, l.onreadystatechange = function () { if (0 !== l.response.length) { var u = JSON.parse(l.response); n = i(u) ? u : new Array(u), t.push(n), r = n, e(this.self) } }), l.open("GET", n, o(e)), l.send(), !o(e)) { var s = JSON.parse(l.response); n = i(s) ? s : new Array(s), t.push(n) } } else t.push(n) } return t.func = "from", r = y(t), o(e) ? e : this }, j = function () { var n = null, t = !1, e = !1, u = []; if (s(r)) return []; var a = null, f = null, h = null; if (jinqJs.settings.includeIdentity && !l && H(), s(arguments)) return r; i(arguments[0]) ? (n = arguments[0], t = !0) : o(arguments[0]) ? (n = arguments[0], e = !0) : n = arguments; for (var c = 0; c < r.length; c++) { if (a = {}, e) a = n(r[c], c); else for (var m = 0; m < n.length; m++) t ? (g(n[m], "field") && (f = isNaN(n[m].field) ? n[m].field : Object.keys(r[c])[n[m].field]), h = g(n[m], "text") ? n[m].text : n[m].field) : h = f = n[m], a[h] = g(n[m], "value") ? o(n[m].value) ? n[m].value(r[c]) : n[m].value : g(r[c], f) ? r[c][f] : r[c]; u.push(a) } return u }, S = function () { t.func = null; for (var n = 0; n < arguments.length; n++) r = r.concat(arguments[n]); return this }, w = function (n) { var t = 0; return t = Math.abs(n) > 0 && Math.abs(n) < 1 ? r.length * n : n, r = 0 > n ? r.slice(t, r.length - -1 * Math.abs(t)) : r.slice(0, t), this }, q = function (n) { return w(-1 * n), this }, I = function (n) { var t = [], e = !1, u = /([^\s]+)\s([<>=!*]{1,2})\s(.+)/, l = !1; if ("undefined" == typeof n) return this; e = o(n); for (var s = 0; s < r.length; s++) { var i = r[s]; if (e) n(i, s) && t.push(i); else { for (var a = 0; a < arguments.length; a++) { var f = arguments[a].match(u); if (l = !1, null === f || 4 !== f.length) throw "Invalid predicate!"; var g = f[2], h = f[1], c = f[3]; switch (g) { case "<": i[h] < c && (l = !0); break; case ">": i[h] > c && (l = !0); break; case "!=": i[h] != c && (l = !0); break; case "=": case "==": i[h] == c && (l = !0); break; case "<=": i[h] <= c && (l = !0); break; case ">=": i[h] >= c && (l = !0); break; case "*": i[h].indexOf(c) > -1 && (l = !0) } if (!l) break } l && t.push(i) } } return r = t, this }, x = function () { var n = [], t = null, e = null, u = 0; if (0 === arguments.length) for (u = 0; u < r.length; u++) -1 === n.indexOf(r[u]) && n.push(r[u]); else for (u = 0; u < r.length; u++) { t = v(r[u], arguments); for (var l = 0; l < arguments.length; l++) if (e = arguments[l], !h(n, e, t[e])) { n.push(t); break } } return r = n, this }, E = function () { return e = arguments, this }, M = function () { var n = {}; if (0 === e.length) { n = 0; for (var t = 0; t < r.length; t++) n += 0 === arguments.length ? r[t] : r[t][arguments[0]]; r = [n] } else r = d(arguments, function (t, r, e) { var u = e; return g(n, u) || (n[u] = 0), n[u] += r }); return this }, A = function () { var n = {}; if (0 === e.length) { n = 0; for (var t = 0; t < r.length; t++) n += 0 === arguments.length ? r[t] : r[t][arguments[0]]; r = [n / r.length] } else r = d(arguments, function (t, r, e) { var u = JSON.stringify(e); return g(n, u) || (n[u] = { count: 0, sum: 0 }), n[u].count++, n[u].sum += r, n[u].sum / n[u].count }); return this }, B = function () { var n = {}; return r = d(arguments, function (t, r, e) { var u = JSON.stringify(e); return g(n, u) || (n[u] = 0), ++n[u] }), this }, D = function () { var n = {}, t = 0; if (0 === e.length) { n = -1; for (var u = 0; u < r.length; u++) t = Number(0 === arguments.length ? r[u] : r[u][arguments[0]]), n = n > t || -1 === n ? t : n; r = [n] } else r = d(arguments, function (t, r, e) { var u = JSON.stringify(e); return g(n, u) || (n[u] = 0), (0 === n[u] || r < n[u]) && (n[u] = r), n[u] }); return this }, G = function () { var n = {}, t = 0; if (0 === e.length) { n = -1; for (var u = 0; u < r.length; u++) t = Number(0 === arguments.length ? r[u] : r[u][arguments[0]]), n = t > n || -1 === n ? t : n; r = [n] } else r = d(arguments, function (t, r, e) { var u = JSON.stringify(e); return g(n, u) || (n[u] = 0), r > n[u] && (n[u] = r), n[u] }); return this }, H = function () { var n = 1, t = 0 === arguments.length ? "ID" : arguments[0], e = r.length > 0 && !a(r[0]), u = [], s = null; l = !0; for (var i = 0; i < r.length; i++) e ? (s = {}, s[t] = n++, s.Value = r[i], u.push(s)) : r[i][t] = n++; return e && (r = u), this }, L = function () { var n = arguments; return arguments.length > 0 && i(arguments[0]) ? (p(arguments[0]), this) : (r.sort(function (t, r) { var e = JSON.stringify(v(t, n)), u = JSON.stringify(v(r, n)); return u > e ? -1 : e > u ? 1 : 0 }), this) }, R = function () { if (0 === arguments.length || !i(arguments[0]) || 0 === arguments[0].length) return this; if (a(arguments[0][0])) { var n = y(arguments); S(n), e = []; for (var t in arguments[0][0]) e.push(t); B() } else { for (var r = 0; r < arguments.length; r++) S(arguments[r]); x() } return this }, T = function () { return 0 !== arguments.length && g(t, "func") ? (O(t.func, arguments), t.func = null, this) : this }, V = function () { var n = [], t = null, e = null, l = !1, s = [], i = null; if (0 === arguments.length) return this; if (i = arguments[0], 0 === i.length || 0 === r.length) return this; var f = !a(i[0]), g = !a(r[0]); if ((!f || !g) && arguments.length < 2) throw "Invalid field or missing field!"; if (arguments.length < 2) s = [0]; else for (var o = 1; o < arguments.length; o++) s.push(arguments[o]); for (var h = 0; h < r.length; h++) { for (var c = 0; c < i.length; c++) { for (var m = 0; m < s.length && (t = g ? r[h] : r[h][s[m]], e = f ? i[c] : i[c][s[m]], l = t === e, l || u) ; m++); if (l) break } (c < i.length && !u || c === i.length && u) && n.push(r[h]) } return u = !1, r = n, this }, X = function () { return k("inner", arguments), this }, z = function () { return k("left", arguments), this }, C = function () { return u = !0, this }; return { from: J, select: j, top: w, bottom: q, where: I, distinct: x, groupBy: E, sum: M, count: B, min: D, max: G, avg: A, identity: H, orderBy: L, on: T, join: X, leftJoin: z, concat: S, union: R, not: C, "in": V } };